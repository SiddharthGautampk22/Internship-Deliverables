<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.5">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="flocardtesting" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;99&quot;, &quot;Google Chrome&quot;;v=&quot;109&quot;, &quot;Chromium&quot;;v=&quot;109&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">flocard.app</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">maps.googleapis.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">centralindia-0.in.applicationinsights.azure.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">accounts.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">play.google.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flocard.app/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="csp_test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csp_test</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">maps/api/mapsjs/gen_204</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://centralindia-0.in.applicationinsights.azure.com//v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-01-17T07:47:01.223Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;72fbdd0f30c14bb9b351a78ebd012c73&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;,&quot;ai.internal.snippet&quot;:&quot;4&quot;,&quot;ai.internal.sdkSrc&quot;:&quot;cdn2&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard: Exchange Contacts, on the Flo&quot;,&quot;url&quot;:&quot;https://flocard.app/&quot;,&quot;duration&quot;:&quot;00:00:01.344&quot;,&quot;properties&quot;:{&quot;refUri&quot;:&quot;&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;72fbdd0f30c14bb9b351a78ebd012c73&quot;}}},{&quot;time&quot;:&quot;2023-01-17T07:47:01.223Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/&quot;,&quot;ai.operation.id&quot;:&quot;72fbdd0f30c14bb9b351a78ebd012c73&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard: Exchange Contacts, on the Flo&quot;,&quot;url&quot;:&quot;https://flocard.app/&quot;,&quot;duration&quot;:&quot;00:00:01.344&quot;,&quot;perfTotal&quot;:&quot;00:00:01.344&quot;,&quot;networkConnect&quot;:&quot;00:00:00.178&quot;,&quot;sentRequest&quot;:&quot;00:00:00.180&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.008&quot;,&quot;domProcessing&quot;:&quot;00:00:00.979&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{&quot;duration&quot;:1344}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flocard.app/Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">Login</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">2916.0</stringProp>
              <stringProp name="ConstantTimer.delay">1458</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 2916 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://centralindia-0.in.applicationinsights.azure.com//v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-01-17T07:47:03.254Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/Login&quot;,&quot;ai.operation.id&quot;:&quot;758a1ae2470d462481e77aee78444c51&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;,&quot;ai.internal.snippet&quot;:&quot;4&quot;,&quot;ai.internal.sdkSrc&quot;:&quot;cdn2&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/Login&quot;,&quot;duration&quot;:&quot;00:00:00.556&quot;,&quot;properties&quot;:{&quot;refUri&quot;:&quot;https://flocard.app/&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;758a1ae2470d462481e77aee78444c51&quot;}}},{&quot;time&quot;:&quot;2023-01-17T07:47:03.254Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/Login&quot;,&quot;ai.operation.id&quot;:&quot;758a1ae2470d462481e77aee78444c51&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/Login&quot;,&quot;duration&quot;:&quot;00:00:00.556&quot;,&quot;perfTotal&quot;:&quot;00:00:00.556&quot;,&quot;networkConnect&quot;:&quot;00:00:00.003&quot;,&quot;sentRequest&quot;:&quot;00:00:00.061&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.001&quot;,&quot;domProcessing&quot;:&quot;00:00:00.488&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{&quot;duration&quot;:555.6999999880791}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/o/oauth2/v2/auth?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid%20email%20profile&amp;redirect_uri=https://flocard.app/Callback/Google&amp;state=flocard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://flocard.app/Callback/Google</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">flocard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">o/oauth2/v2/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">1924.0</stringProp>
              <stringProp name="ConstantTimer.delay">962</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 1924 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/o/oauth2/v2/auth?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid%20email%20profile&amp;redirect_uri=https://flocard.app/Callback/Google&amp;state=flocard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://flocard.app/Callback/Google</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">flocard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">o/oauth2/v2/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;109.0.5414.74&quot;, &quot;Chromium&quot;;v=&quot;109.0.5414.74&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">162.0</stringProp>
              <stringProp name="ConstantTimer.delay">81</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 162 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;]],558,[[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[[null,[1,\&quot;accounts.google.com/o/oauth2/v2/auth\&quot;,null,[\&quot;https://flocard.app/\&quot;],false]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],1,null,null,null,null,null,[]],[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[[[224,42076,\&quot;invalid-device-id\&quot;,null,null,null,null,null,null,null,null,null,\&quot;accounts.google.com/o/oauth2/v2/auth\&quot;]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],2,null,null,null,null,null,[]],[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[[null,[1,\&quot;accounts.google.com/o/oauth2/v2/auth\&quot;,null,[\&quot;https://flocard.app/\&quot;],true]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],3,null,null,null,null,null,[]],[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[[null,[1,\&quot;accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid%20email%20profile&amp;redirect_uri=https%3A%2F%2Fflocard.app%2FCallback%2FGoogle&amp;state=flocard&amp;service=lso&amp;o2v=2&amp;flowName=GeneralOAuthFlow\&quot;,null,[\&quot;https://flocard.app/\&quot;],true]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],4,null,null,null,null,null,[]]],&quot;1673941625805&quot;,[]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">log?format=json&amp;hasfast=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 3cabaf66df92c2a8bf29b2314658911332f4979e</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;]],558,[[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[[null,[1,\&quot;accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount\&quot;,null,[\&quot;https://flocard.app/\&quot;],false]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],1,null,null,null,null,null,[]],[&quot;1673941625000&quot;,null,[],null,null,null,null,&quot;[null,null,3,[null,\&quot;S-905880796:1673941624974794\&quot;],[\&quot;Southern Asia\&quot;,null,\&quot;/o/oauth2/v2/auth/oauthchooseaccount\&quot;,3,396,1,\&quot;IN\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],2,null,null,null,null,null,[]]],&quot;1673941625998&quot;,[]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">log?format=json&amp;hasfast=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 3cabaf66df92c2a8bf29b2314658911332f4979e</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;]],558,[[&quot;1673941626000&quot;,null,[],null,null,null,null,&quot;[[[307,64002,null,null,null,null,null,null,null,null,null,null,\&quot;accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount\&quot;]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],5,null,null,null,null,null,[]]],&quot;1673941626127&quot;,[]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">log?format=json&amp;hasfast=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 3cabaf66df92c2a8bf29b2314658911332f4979e</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/_/signin/oauth?authuser=0&amp;hl=en&amp;_reqid=47828&amp;rt=j" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="rt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rt</stringProp>
                  <stringProp name="Argument.value">j</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">hl</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_reqid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_reqid</stringProp>
                  <stringProp name="Argument.value">47828</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkConnection" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">checkConnection</stringProp>
                  <stringProp name="Argument.value">youtube:409:0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="checkedDomains" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">checkedDomains</stringProp>
                  <stringProp name="Argument.value">youtube</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="f.req" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">f.req</stringProp>
                  <stringProp name="Argument.value">[&quot;AEThLlw1y4tuPIs7-1IjH8_i6UZecJQQqwfoS5H_eeTNl0y1l9td-q5jXHp1xBVqaNs_uwXMMRNHHRxshe6wb5s2q9yOAiOHUUxdwPsG6qdUDBfDLeun4UzEwp_XqRcO5-AFMrwB6dt3Gfmad_aPWY_3ihfzcdi-5Kjr-Dv8_z7xlnBRHWIrmUiyKVdzyK_MxGIoumNG1lkRGokb7KxDgSQcoMP_JaqDqCTUH4RlbWVHDbujABe-HAAA6GmZx4r8QeCoafzgpsHoPDtUMxuviccRniRJpS6NsJRejKeRR9jBCVx4T52yDsACMvm1mPD14TnkgDBaHthlCd3J1X-PRLhDIXEoEsKq1SP32_QQ_in4_xqFKZB9JBRCXLqmLZWWC-XUhGC7QElNxX-dy6_gl_Y_zEyhpQJaBMucp7qYjgamcVl_J3vRgsLGDi7zJwOlYtsXMya7g5Gdyw5kHUAZF4mepj2SAy7uz-wxt62-8IGC7_7nxhwz9IeMQMTzSuDEuwcdD6asfoO6cTofRTPdneOP3DiIGH8iIg&quot;,0,false,null,[null,null,[2,1,null,1,&quot;https://accounts.google.com/signin/oauth?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid+email+profile&amp;redirect_uri=https%3A%2F%2Fflocard.app%2FCallback%2FGoogle&amp;state=flocard&quot;,null,[],4,[],&quot;GeneralOAuthFlow&quot;,null,[],true],10,[null,&quot;414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&quot;,[],&quot;!ChRtWVhlX1gtcmlTcTI2SzdCMFlKVxIfWXo0UzVDckZUN2tkOEhuU1JuY2dubW91akNMcld4Zw∙AJFHa0oAAAAAY8ej-Xtpe6r386hYro-zb3Szbk3v2OHv&quot;,null,null,null,null,null,null,null,&quot;https://flocard.app&quot;,&quot;S-905880796:1673941624974794&quot;,false,null,null,null,null,[5,&quot;77185425430.apps.googleusercontent.com&quot;,[&quot;https://www.google.com/accounts/OAuthLogin&quot;],null,null,&quot;49e3d4bf-e2ee-4456-8ead-639ae89c0609&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,5,null,null,[],null,null,null,null,[]],null,null,null,14,null,null,[],true,null,null,null,[[null,9315],[null,202],[null,204]],null,true,null,null,true],null,null,null,true,null,null,null,null,null,null,null,null,[],null,null,3]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="gmscoreversion" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">gmscoreversion</stringProp>
                  <stringProp name="Argument.value">undefined</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cookiesDisabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cookiesDisabled</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="o2v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">o2v</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="at" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">at</stringProp>
                  <stringProp name="Argument.value">AFoagUUJ7ZEagwyYCaoDPLnKFSPSA_CVvQ:1673941625174</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="continue" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">continue</stringProp>
                  <stringProp name="Argument.value">https://accounts.google.com/signin/oauth/consent?authuser=unknown&amp;part=AJi8hAO1DFmudNQ2qDRgU-nh7vjIjLgUrGj-Fk3guut7dhY6DNkS3P8UehWEzq4i3-bMujBdS1zVTy8PESb-xLk9M-Fqh8cKbJ_-m71J7L9GmWfoveOEdvcWJv1pEafgo4Fp8-eIamGRZliggIf9JSQX5afvC1nJ5A2lD95Fx3NeH5Zp7GA6AJQOPXqoKIwdDq9wdo91nt_Y8WIYGE9PvDvaX4Bwfn7MyneY09gPTXX7zDGV7yLzJY9_VMjUI-uhmks5p3d5_7a1XdxnX0jcQQn-i41lLOQmpKPtymT3IHNQgL-4LD4gFg0mXGi6U5kx3Q82wNLb-RAhHqycttP5yhMVFnMiZXrSF5mkbCPd-koZY2YAnSyrfCOaNiBvO0tX_jX5qJNSVuFdhsrZzgQVfXZM9uKnv9pU7RhjJSjH5gP_G6xsSBcFfMoxx8WJsOUkdmtWQCr77BvZnYhtMRQl9BqLiO5KodIQ6w&amp;as=S-905880796%3A1673941624974794&amp;client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com#</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="service" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">service</stringProp>
                  <stringProp name="Argument.value">lso</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bgRequest" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bgRequest</stringProp>
                  <stringProp name="Argument.value">[&quot;oauth-account-chooser&quot;,&quot;&lt;ywdqB0oCAAazYIROk2CNkY57kMwF4o30ACkAIwj8RsiMBGymtqk4TEwCsHbSDkP5UCVjMEWWkzjoo3fqbK__KWD4Uc0AAACKnQAAAASnAQdWA4JfineSOsagkXkcCvPcrgO7tu4bPdzWnUbqBlw-V4jkuwdTXKdBI4JbVrMLPnsO2KmZamal_-6rtQH6zYHf01LLhlzWzpSyV3QIBolWwL8tde3asvuEkQXu-8BZmCDigeNl6brYUWtbeRni-Fii3KKsFvZPwI2hsiVztb_hNw9-AJrXw4qwIyHTUF1ljsM9wfEXMwPdoO1lk5sgIj1fa6WI3aW-mPPUN5BTecU3zok0394h0DFzwX6BsDyHfev9tYxmzEwYfscPjumH4cU8die3n10_oamVzNMs2WonUEE9SAgnPUIxmcnxVqJSZT8XlrDwhKSxTh71QTPQV1oJ1GfV1KFNewnB50EVYHPoI6EH5YZtPwOqKlH5xa_T1Wb47yzd0mZ38GHuaNgT1bIm1JCX0O_T4xOSpSPZaqpfG4mEJEkQp-sXkEgdg_V3gYQY9JLlo-QKBx_cFiDXU-DXEG-2nwH2m6bInFvabGS_Hgbisl15s78E_D4wcYp3pv0QXNl1qdnvHg_ic58Mw10d_OPOtil4GTbCNy4jixM_Pq2i_2f33rnP2AXvOGH-K9dqLd6T6h6-R8Tkml3XH7b1PCs8WReNEGQ-SxKd9BEVwxFXWpWjF5agwXJIF721yZGo5oievfB3TKNNONlPmwGFwjD2PhiVnJYlBQa9btB8WxxM4CWaJA2GccTFfZFFlCvtyu-Pc_Rkdr6ylZ5E342Q8mQIBhgU9YIDeYMTAZAxyN4yjTZ-d_iAsurDAoKegtbPxhyHQPcdY2IV5Nol9Rvtmzeg1hEuTUdY7-M-ArmAOp8T8yBL8ECCCzBYFutTurCLuJp-qI2v7kLx9i9yLKNSPwFJcnHnF49kZtgT6Y9xl39_RISmYjijawXgY7WkNbXtLkRKxVekMV5yjXA7cL-LBF6HL0RPdCLo82cdL4fy9HbGWOpjrC27DKSGM4niBfgpqwANt8H_OOW2f0ArbtmCWLrW6rqconGptWORlQsHAme42wKwktRHM0rGR16aPdZH6wx0eq9zH_DOUT_YiJe6XLENj_mXWF4VgGzjZobZ-3O11ID-Yid0aOJ40DwFxtsqQBh_2xXuzjz2rki5JzsaFYH-XbRhB2hX_0dyjT2fJwyFLN6xvYW3NzDn9rn-4vtMZLKq9-CQ9TDTfpptPNLNOThX6eyEMPDstWBrzhX3FWncfMkW&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="azt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">azt</stringProp>
                  <stringProp name="Argument.value">AFoagUUJ7ZEagwyYCaoDPLnKFSPSA_CVvQ:1673941625174</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://flocard.app/Callback/Google</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">flocard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="deviceinfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">deviceinfo</stringProp>
                  <stringProp name="Argument.value">[null,null,null,[],null,&quot;IN&quot;,null,null,null,&quot;GeneralOAuthFlow&quot;,null,[null,&quot;414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&quot;,[],&quot;!ChRtWVhlX1gtcmlTcTI2SzdCMFlKVxIfWXo0UzVDckZUN2tkOEhuU1JuY2dubW91akNMcld4Zw∙AJFHa0oAAAAAY8ej-Xtpe6r386hYro-zb3Szbk3v2OHv&quot;,null,null,null,null,null,null,null,&quot;https://flocard.app&quot;,&quot;S-905880796:1673941624974794&quot;,false,null,null,null,null,[5,&quot;77185425430.apps.googleusercontent.com&quot;,[&quot;https://www.google.com/accounts/OAuthLogin&quot;],null,null,&quot;49e3d4bf-e2ee-4456-8ead-639ae89c0609&quot;,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,5,null,null,[],null,null,null,null,[]],null,null,null,14,null,null,[],true,null,null,null,[[null,9315],[null,202],[null,204]],null,true,null,null,true],null,null,null,null,1,null,false,1,&quot;&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">_/signin/oauth</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="X-Same-Domain" elementType="Header">
                  <stringProp name="Header.name">X-Same-Domain</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Google-Accounts-XSRF" elementType="Header">
                  <stringProp name="Header.name">Google-Accounts-XSRF</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://play.google.com/log?format=json&amp;hasfast=true" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[[1,null,null,null,null,null,null,null,null,null,[null,null,null,null,&quot;en&quot;]],558,[[&quot;1673941627000&quot;,null,[],null,null,null,null,&quot;[[[196,37066,null,null,null,null,null,null,null,null,null,null,\&quot;accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount\&quot;]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],6,null,null,null,null,null,[]],[&quot;1673941627000&quot;,null,[],null,null,null,null,&quot;[[[296,37131,null,null,null,null,null,null,null,null,null,null,\&quot;accounts.google.com/o/oauth2/v2/auth/oauthchooseaccount\&quot;]],null,3,[null,\&quot;S-905880796:1673941624974794\&quot;]]&quot;,null,null,null,null,null,null,-19800,null,null,null,null,[],7,null,null,null,null,null,[]]],&quot;1673941627528&quot;,[]]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">log?format=json&amp;hasfast=true</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">SAPISIDHASH 3cabaf66df92c2a8bf29b2314658911332f4979e</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/signin/oauth/consent?authuser=0&amp;part=AJi8hAO1DFmudNQ2qDRgU-nh7vjIjLgUrGj-Fk3guut7dhY6DNkS3P8UehWEzq4i3-bMujBdS1zVTy8PESb-xLk9M-Fqh8cKbJ_-m71J7L9GmWfoveOEdvcWJv1pEafgo4Fp8-eIamGRZliggIf9JSQX5afvC1nJ5A2lD95Fx3NeH5Zp7GA6AJQOPXqoKIwdDq9wdo91nt_Y8WIYGE9PvDvaX4Bwfn7MyneY09gPTXX7zDGV7yLzJY9_VMjUI-uhmks5p3d5_7a1XdxnX0jcQQn-i41lLOQmpKPtymT3IHNQgL-4LD4gFg0mXGi6U5kx3Q82wNLb-RAhHqycttP5yhMVFnMiZXrSF5mkbCPd-koZY2YAnSyrfCOaNiBvO0tX_jX5qJNSVuFdhsrZzgQVfXZM9uKnv9pU7RhjJSjH5gP_G6xsSBcFfMoxx8WJsOUkdmtWQCr77BvZnYhtMRQl9BqLiO5KodIQ6w&amp;as=S-905880796%3A1673941624974794&amp;client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;pli=1&amp;rapt=AEjHL4NdGQt8M1--rK28XCIhtmmOa6uwDFJpRLYPKGwLjdK9mVeaJupPHBe3QVU_bjQs-I9EM0PhBz31HrIpxx-u0EAJPuc2Vg#" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="as" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">as</stringProp>
                  <stringProp name="Argument.value">S-905880796:1673941624974794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rapt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rapt</stringProp>
                  <stringProp name="Argument.value">AEjHL4NdGQt8M1--rK28XCIhtmmOa6uwDFJpRLYPKGwLjdK9mVeaJupPHBe3QVU_bjQs-I9EM0PhBz31HrIpxx-u0EAJPuc2Vg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="part" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">part</stringProp>
                  <stringProp name="Argument.value">AJi8hAO1DFmudNQ2qDRgU-nh7vjIjLgUrGj-Fk3guut7dhY6DNkS3P8UehWEzq4i3-bMujBdS1zVTy8PESb-xLk9M-Fqh8cKbJ_-m71J7L9GmWfoveOEdvcWJv1pEafgo4Fp8-eIamGRZliggIf9JSQX5afvC1nJ5A2lD95Fx3NeH5Zp7GA6AJQOPXqoKIwdDq9wdo91nt_Y8WIYGE9PvDvaX4Bwfn7MyneY09gPTXX7zDGV7yLzJY9_VMjUI-uhmks5p3d5_7a1XdxnX0jcQQn-i41lLOQmpKPtymT3IHNQgL-4LD4gFg0mXGi6U5kx3Q82wNLb-RAhHqycttP5yhMVFnMiZXrSF5mkbCPd-koZY2YAnSyrfCOaNiBvO0tX_jX5qJNSVuFdhsrZzgQVfXZM9uKnv9pU7RhjJSjH5gP_G6xsSBcFfMoxx8WJsOUkdmtWQCr77BvZnYhtMRQl9BqLiO5KodIQ6w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pli" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pli</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">signin/oauth/consent</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">3395.0</stringProp>
              <stringProp name="ConstantTimer.delay">1697.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 3395 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/signin/oauth/consent?authuser=0&amp;part=AJi8hAO1DFmudNQ2qDRgU-nh7vjIjLgUrGj-Fk3guut7dhY6DNkS3P8UehWEzq4i3-bMujBdS1zVTy8PESb-xLk9M-Fqh8cKbJ_-m71J7L9GmWfoveOEdvcWJv1pEafgo4Fp8-eIamGRZliggIf9JSQX5afvC1nJ5A2lD95Fx3NeH5Zp7GA6AJQOPXqoKIwdDq9wdo91nt_Y8WIYGE9PvDvaX4Bwfn7MyneY09gPTXX7zDGV7yLzJY9_VMjUI-uhmks5p3d5_7a1XdxnX0jcQQn-i41lLOQmpKPtymT3IHNQgL-4LD4gFg0mXGi6U5kx3Q82wNLb-RAhHqycttP5yhMVFnMiZXrSF5mkbCPd-koZY2YAnSyrfCOaNiBvO0tX_jX5qJNSVuFdhsrZzgQVfXZM9uKnv9pU7RhjJSjH5gP_G6xsSBcFfMoxx8WJsOUkdmtWQCr77BvZnYhtMRQl9BqLiO5KodIQ6w&amp;as=S-905880796%3A1673941624974794&amp;client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;pli=1&amp;rapt=AEjHL4NdGQt8M1--rK28XCIhtmmOa6uwDFJpRLYPKGwLjdK9mVeaJupPHBe3QVU_bjQs-I9EM0PhBz31HrIpxx-u0EAJPuc2Vg#" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="as" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">as</stringProp>
                  <stringProp name="Argument.value">S-905880796:1673941624974794</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="rapt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rapt</stringProp>
                  <stringProp name="Argument.value">AEjHL4NdGQt8M1--rK28XCIhtmmOa6uwDFJpRLYPKGwLjdK9mVeaJupPHBe3QVU_bjQs-I9EM0PhBz31HrIpxx-u0EAJPuc2Vg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="part" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">part</stringProp>
                  <stringProp name="Argument.value">AJi8hAO1DFmudNQ2qDRgU-nh7vjIjLgUrGj-Fk3guut7dhY6DNkS3P8UehWEzq4i3-bMujBdS1zVTy8PESb-xLk9M-Fqh8cKbJ_-m71J7L9GmWfoveOEdvcWJv1pEafgo4Fp8-eIamGRZliggIf9JSQX5afvC1nJ5A2lD95Fx3NeH5Zp7GA6AJQOPXqoKIwdDq9wdo91nt_Y8WIYGE9PvDvaX4Bwfn7MyneY09gPTXX7zDGV7yLzJY9_VMjUI-uhmks5p3d5_7a1XdxnX0jcQQn-i41lLOQmpKPtymT3IHNQgL-4LD4gFg0mXGi6U5kx3Q82wNLb-RAhHqycttP5yhMVFnMiZXrSF5mkbCPd-koZY2YAnSyrfCOaNiBvO0tX_jX5qJNSVuFdhsrZzgQVfXZM9uKnv9pU7RhjJSjH5gP_G6xsSBcFfMoxx8WJsOUkdmtWQCr77BvZnYhtMRQl9BqLiO5KodIQ6w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pli" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pli</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authuser" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">authuser</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">signin/oauth/consent</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;109.0.5414.74&quot;, &quot;Chromium&quot;;v=&quot;109.0.5414.74&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">4.0</stringProp>
              <stringProp name="ConstantTimer.delay">2</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 4 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://centralindia-0.in.applicationinsights.azure.com//v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-01-17T07:47:10.814Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/Login&quot;,&quot;ai.operation.id&quot;:&quot;e658068694fc488b82c7d23fa5d8dc84&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;,&quot;ai.internal.snippet&quot;:&quot;4&quot;,&quot;ai.internal.sdkSrc&quot;:&quot;cdn2&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/Login&quot;,&quot;duration&quot;:&quot;00:00:02.636&quot;,&quot;properties&quot;:{&quot;refUri&quot;:&quot;https://accounts.google.com/&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;e658068694fc488b82c7d23fa5d8dc84&quot;}}},{&quot;time&quot;:&quot;2023-01-17T07:47:10.815Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/Login&quot;,&quot;ai.operation.id&quot;:&quot;e658068694fc488b82c7d23fa5d8dc84&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/Login&quot;,&quot;duration&quot;:&quot;00:00:02.636&quot;,&quot;perfTotal&quot;:&quot;00:00:02.636&quot;,&quot;networkConnect&quot;:&quot;00:00:02.247&quot;,&quot;sentRequest&quot;:&quot;00:00:00.052&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.001&quot;,&quot;domProcessing&quot;:&quot;00:00:00.334&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{&quot;duration&quot;:2635.699999988079}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/o/oauth2/v2/auth?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid%20email%20profile&amp;redirect_uri=https://flocard.app/Callback/Google&amp;state=flocard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://flocard.app/Callback/Google</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">flocard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">o/oauth2/v2/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">21620.0</stringProp>
              <stringProp name="ConstantTimer.delay">10810</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 21620 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://accounts.google.com/o/oauth2/v2/auth?client_id=414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com&amp;response_type=code&amp;scope=openid%20email%20profile&amp;redirect_uri=https://flocard.app/Callback/Google&amp;state=flocard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">openid email profile</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="response_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">response_type</stringProp>
                  <stringProp name="Argument.value">code</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="redirect_uri" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">redirect_uri</stringProp>
                  <stringProp name="Argument.value">https://flocard.app/Callback/Google</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="state" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">state</stringProp>
                  <stringProp name="Argument.value">flocard</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">414624407463-kgoc5trhp7kv366lua5e2qmf874mco2o.apps.googleusercontent.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">o/oauth2/v2/auth</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Chrome-ID-Consistency-Request" elementType="Header">
                  <stringProp name="Header.name">X-Chrome-ID-Consistency-Request</stringProp>
                  <stringProp name="Header.value">version=1,client_id=77185425430.apps.googleusercontent.com,device_id=49e3d4bf-e2ee-4456-8ead-639ae89c0609,sync_account_id=117626505825526681210,signin_mode=all_accounts,signout_mode=show_confirmation</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-arch" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-arch</stringProp>
                  <stringProp name="Header.value">&quot;x86&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform-version" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform-version</stringProp>
                  <stringProp name="Header.value">&quot;10.0.0&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-model" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-model</stringProp>
                  <stringProp name="Header.value">&quot;&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-bitness" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-bitness</stringProp>
                  <stringProp name="Header.value">&quot;64&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-wow64" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-wow64</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-full-version-list" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-full-version-list</stringProp>
                  <stringProp name="Header.value">&quot;Not_A Brand&quot;;v=&quot;99.0.0.0&quot;, &quot;Google Chrome&quot;;v=&quot;109.0.5414.74&quot;, &quot;Chromium&quot;;v=&quot;109.0.5414.74&quot;</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">5.0</stringProp>
              <stringProp name="ConstantTimer.delay">2.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 5 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://maps.googleapis.com/maps/api/mapsjs/gen_204?csp_test=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="csp_test" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">csp_test</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">maps/api/mapsjs/gen_204</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://centralindia-0.in.applicationinsights.azure.com//v2/track" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;time&quot;:&quot;2023-01-17T07:47:34.887Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.Pageview&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/User&quot;,&quot;ai.operation.id&quot;:&quot;08f21af85b1b4e4b9191a5a69667b54a&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;,&quot;ai.internal.snippet&quot;:&quot;4&quot;,&quot;ai.internal.sdkSrc&quot;:&quot;cdn2&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;My Cards - Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/User&quot;,&quot;duration&quot;:&quot;00:00:05.023&quot;,&quot;properties&quot;:{&quot;refUri&quot;:&quot;https://flocard.app/&quot;},&quot;measurements&quot;:{},&quot;id&quot;:&quot;08f21af85b1b4e4b9191a5a69667b54a&quot;}}},{&quot;time&quot;:&quot;2023-01-17T07:47:34.887Z&quot;,&quot;iKey&quot;:&quot;919a4e77-3ae2-4863-83e3-81346c0ed53b&quot;,&quot;name&quot;:&quot;Microsoft.ApplicationInsights.919a4e773ae2486383e381346c0ed53b.PageviewPerformance&quot;,&quot;tags&quot;:{&quot;ai.user.id&quot;:&quot;Lmkcr+dTFQt5X7l1KX+UqP&quot;,&quot;ai.session.id&quot;:&quot;97DDBiehdB840t9PYHUNf0&quot;,&quot;ai.device.id&quot;:&quot;browser&quot;,&quot;ai.device.type&quot;:&quot;Browser&quot;,&quot;ai.operation.name&quot;:&quot;/User&quot;,&quot;ai.operation.id&quot;:&quot;08f21af85b1b4e4b9191a5a69667b54a&quot;,&quot;ai.internal.sdkVersion&quot;:&quot;javascript:2.8.9&quot;},&quot;data&quot;:{&quot;baseType&quot;:&quot;PageviewPerformanceData&quot;,&quot;baseData&quot;:{&quot;ver&quot;:2,&quot;name&quot;:&quot;My Cards - Flocard&quot;,&quot;url&quot;:&quot;https://flocard.app/User&quot;,&quot;duration&quot;:&quot;00:00:05.023&quot;,&quot;perfTotal&quot;:&quot;00:00:05.023&quot;,&quot;networkConnect&quot;:&quot;00:00:02.216&quot;,&quot;sentRequest&quot;:&quot;00:00:01.096&quot;,&quot;receivedResponse&quot;:&quot;00:00:00.089&quot;,&quot;domProcessing&quot;:&quot;00:00:01.621&quot;,&quot;properties&quot;:{},&quot;measurements&quot;:{&quot;duration&quot;:5023.100000023842}}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/v2/track</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
